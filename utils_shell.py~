from python_shell import Shell
from python_shell.util.streaming import decode_stream
import os


def git_add_commit_push(commit_message, branch="main", repository_path="."):
    """
    Executa git add ., git commit e git push usando python_shell

    Args:
        commit_message (str): Mensagem do commit
        branch (str): Nome da branch (padr√£o: "main")
        repository_path (str): Caminho do reposit√≥rio (padr√£o: diret√≥rio atual)

    Returns:
        bool: True se todos os comandos foram executados com sucesso, False caso contr√°rio
    """

    original_dir = os.getcwd()

    try:
        # Salva diret√≥rio atual e muda para o reposit√≥rio
        original_dir = os.getcwd()
        os.chdir(repository_path)

        print(f"üìÅ Trabalhando no diret√≥rio: {os.getcwd()}")

        # Verifica se √© um reposit√≥rio Git
        status_check = Shell.git('status')
        if status_check.return_code != 0:
            print("‚ùå Erro: Este diret√≥rio n√£o √© um reposit√≥rio Git")
            print(decode_stream(status_check.errors))
            return False

        # Git add .
        print("‚ûï Executando git add ...")
        add_result = Shell.git('add', '.')
        if add_result.return_code != 0:
            print(f"‚ùå Erro no git add:")
            print(decode_stream(add_result.errors))
            return False
        print("‚úÖ git add executado com sucesso")

        # Verifica se h√° mudan√ßas para commit
        diff_check = Shell.git('diff', '--cached', '--quiet')
        if diff_check.return_code == 0:
            print("‚ö†Ô∏è Nenhuma mudan√ßa para fazer commit")
            return True

        # Git commit
        print("üíæ Executando git commit...")
        commit_result = Shell.git('commit', '-m', commit_message)
        if commit_result.return_code != 0:
            print(f"‚ùå Erro no git commit:")
            print(decode_stream(commit_result.errors))
            return False
        print(f"‚úÖ git commit executado: {commit_message}")

        # Git push
        print(f"üöÄ Executando git push origin {branch}...")
        push_result = Shell.git('push', 'origin', branch)
        if push_result.return_code != 0:
            print(f"‚ùå Erro no git push:")
            print(decode_stream(push_result.errors))
            return False
        print("‚úÖ git push executado com sucesso")

        print("üéâ Todos os comandos Git executados com sucesso!")
        return True

    except Exception as e:
        print(f"‚ùå Erro inesperado: {e}")
        return False
    finally:
        # Retorna ao diret√≥rio original
        os.chdir(original_dir)


# Exemplo de uso
if __name__ == "__main__":
    # Mostra status atual


    # Executa os comandos
    mensagem = input("\nDigite a mensagem do commit: ")
    if mensagem.strip():
        print("\n=== EXECUTANDO COMANDOS ===")
        sucesso = git_add_commit_push(mensagem)

        if sucesso:
            print("\n=== STATUS DEPOIS ===")
            git_status()
    else:
        print("‚ùå Mensagem do commit n√£o pode estar vazia")