import os
import pandas as pd
from pathlib import Path
import webbrowser

from utils import (fragmenta_csv_por_faixas, save_csv, ensure_csv_local,
                   normalize_timestamp_column, transformar_coluna, limpar_coluna,
                   corrigir_nao_se_aplica, padronizar_respostas)
from utils_censo import (escolas_unicas, gerar_pagina_html_escolas_unicas,
                         adicionar_colunas, gerar_pagina_html_ranking)
from utils_processamento import limpar_dataframe_completo

# Configurações centralizadas
TRANSFORMACOES = {
    "upper": ["1.1. Nome da Escola"],
    "title": [
        "1.2. Endereço",
        "1.6. Nome da Direção",
        '1.7. Nome da Vice-Direção (se não houver, responder "Não se aplica")',
        '2.21.1. Caso a resposta anterior seja "Não", quais equipamentos se encontram em falta ou necessitando de manutenção/substituição? (Pode marcar mais de uma opção)',
        '2.27.1. Caso a resposta anterior seja "Não", quais equipamentos estão em falta? (Pode marcar mais de uma opção)',
        '3.2. Caso a resposta anterior seja "Sim", quais as medidas adotadas pela Escola para combater o problema?',
    ],
    "lower": [
        "1.4. E-mail de Contato",
        '1.5. Caso a Escola possua perfil em redes sociais (Instagram, Facebook etc), indicar o nome e a rede social (Caso não possua perfil, responder "Não se aplica")',
        '2.21.1. Caso a resposta anterior seja "Não", quais equipamentos se encontram em falta ou necessitando de manutenção/substituição? (Pode marcar mais de uma opção)',
    ],
    "capitalize": [
        '2.11.1. Caso a resposta anterior seja "Sim", quais esportes são oferecidos? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '2.12.1. Caso a resposta anterior seja "Sim", em qual local se realizam as aulas práticas de Educação Física? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '2.26.1. Caso a resposta anterior seja "Sim", de que forma é realizado o controle de estoque?',
        '3.11.1. Caso a resposta anterior seja "Sim", quantos alunos necessitam de transporte especial?',
        '3.11.3. Caso seja atendida apenas parte dos alunos que necessitam de transporte escolar especial, qual a quantidade de estudantes que não está sendo atendida por esse serviço? Caso não se aplique, indicar o número 0 (zero)',
        '5.5.1. Caso a resposta anterior seja "Sim", em que consiste a classificação? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '6.3.1. Caso a resposta anterior seja "Sim", quais atividades são desenvolvidas? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '7.1. Qual(is) foi(ram) a(s) nota(s) obtida(s) pela Escola na última avaliação do IDEB? Caso a Escola não possua nota, responder "Não se aplica".',
        '7.2. Qual(is) foi(ram) a(s) nota(s) obtida(s) pela Escola na última avaliação do SIMAIS? Caso a Escola não possua nota, responder "Não se aplica".',
        '7.4. A Escola disponibiliza algum tipo de atividade de ensino a distância ou remota?',
        '12.4.1. Caso a resposta anterior seja "Sim", em que consistem as dificuldades? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '12.5.1. Caso a resposta anterior seja "Sim", qual o ano da prestação de contas pendente e a qual recurso financeiro essa se refere? Caso a resposta anterior seja "Não", responder "Não se aplica".',
        '14.1. Qual é o seu objetivo como Diretor(a) da Escola?',
        '14.2.1. De forma resumida, o que é preciso para o desenvolvimento do projeto desejado? Caso a resposta anterior seja "Não", responder "Não se aplica".',
    ]
}

LIMPEZAS = {
    "1.13. A Escola possui quantos alunos matriculados no momento?": [".", "alunos", " "],
    "1.14. Qual é a quantidade de turmas existentes na Escola?": ["turmas"],
    "2.14.1. Caso a Escola possua laboratório de informática, quantos computadores estão funcionando?": [
        "computadores"],
    '3.9.1. Caso a resposta anterior seja "Sim", a Escola possui quantos alunos com NEE, incluindo aqueles estudantes sem laudo médico?': [
        "alunos", "NEE", "apenas um com laudo médico", ","],
    "3.10.3. Qual a quantidade de alunos que necessitam de transporte escolar regular? Caso a Escola não utilize e não necessite de transporte escolar, indicar o número 0 (zero)": [
        "aluno", "alunos"],
    "7.4. A Escola disponibiliza algum tipo de atividade de ensino a distância ou remota?": ["."],
    '12.4.1. Caso a resposta anterior seja "Sim", em que consistem as dificuldades? Caso a resposta anterior seja "Não", responder "Não se aplica".': [
        "."],
    '12.5.1. Caso a resposta anterior seja "Sim", qual o ano da prestação de contas pendente e a qual recurso financeiro essa se refere? Caso a resposta anterior seja "Não", responder "Não se aplica".': [
        "."],
}

PADRONIZACOES = {
    "1.15. Qual é a quantidade de salas de aula existentes na Escola?": {
        "8": ["8 salas"],
        "10": ["10 salas de aulas"],
        "05": ["05 salas"],
        "04": ["04 por turno"]
    },
    '2.11.1. Caso a resposta anterior seja "Sim", quais esportes são oferecidos? Caso a resposta anterior seja "Não", responder "Não se aplica".': {
        "Futsal": ["FUTSAL"],
        "Não se aplica": ["Não se aplica", "NAO SE APLICA", "NÃO SE APLICA", "não se aplica", "Nao se aplica"]
    },
    '2.12.1. Caso a resposta anterior seja "Sim", em qual local se realizam as aulas práticas de Educação Física? Caso a resposta anterior seja "Não", responder "Não se aplica".': {
        "Quadra/Pátio da escola": [
            "Na quadra de esportes", "As atividades de Educação Física são realizadas no pátio da escola.",
            "Na área externa", "A ESCOLA USA O ESPAÇO EXTERNO DA ESCOLA", "NA QUADRA DA ESCOLA",
            "NO PATIO DA PROPRIA ESCOLA", "Quadra Poliesportiva da Instituição"
        ],
        "Locais emprestados": ["EM LOCAIS EMPRESTADOS"],
        "Ginásio/Quadra municipal": [
            "No ginásio do município de Vila Flor", "Ginásio de esporte municipal",
            "No ginásio de esporte de município", "QUADRA DE ESPORTE DO MUNICIPIO VIZINHO A ESCOLA"
        ],
        "Espaços cedidos (campo de areia, campo de futebol, entre outros)":
            ["No Campo de futebol da comunidade (Municipal)."]
    },
    '2.21.1. Caso a resposta anterior seja "Não", quais equipamentos se encontram em falta ou necessitando de manutenção/substituição? (Pode marcar mais de uma opção)': {
        "Todos estão em perfeito estado/Não está faltando nada": [
            "Todos estão em perfeito estado", "não", "não está faltando nada na cozinha",
            "Tem tudo que necessita para preparar e servir a merenda.",
            "tem tudo que necessita para preparar e servir a merenda."
        ],
        "Processador/Multiprocessador": ["MULTIPROCESSADOR", "PROCESSADOR"],
        "Liquidificador": ["LIQUIDIFICADOR INDUSTRIAL"]
    },
    '2.26.1. Caso a resposta anterior seja "Sim", de que forma é realizado o controle de estoque?': {
        "Controle feito manualmente em caderno ou ficha de controle":
            ["É FEITO ATRAVÉS DOE UM CONTROLE DIÁRIO DE ALIMENTOS"],
        "Controle realizado por cardápio e valores de insumos utilizados":
            ["O CONTROLE É REALIZADO VIA CARDÁPIO CONFORME OS VALORES RECEBIDOS."],
        "Sistema da SEDUC / plataforma digital": ["SISTEMA DA SEEC"],
        "Controle feito pelas merendeiras": ["pelas merendeiras"],
        "Por orientação do órgão responsável (DRAE ou Secretaria de Educação)":
            ["Por orientação do órgão responsável - DRAE"],
        "Controle feito diariamente durante a preparação da merenda":
            ["Sim. O registro é realizado diariamente no diário de alimentação escolar."],
        "Controle supervisionado pela Secretaria Municipal de Educação": [
            "Através de supervisão da gestão",
            "O controle é realizado pelo serviço de nutrição da Secretaria Municipal de Educação semanalmente."
        ],
        "Verificação da qualidade e quantidade no momento do recebimento":
            ["verificando a qualidade e quantidade de alimentos no momento do recebimento"],
        "Controle realizado em planilhas (entrada e saída de produtos)":
            ["PLANILHAS", "ATRAVES DE PLANILHA DE ENTRADA E SAIDA DE PRODUTOS"],
        "Controle semanal realizado pelo gestor escolar":
            ["O gestor escolar fica responsável por esse controle."],
        "Existe local de armazenamento e registro das entradas e saídas": [
            "Existi um local de armazenamento, no qual é repassado todos os dias para a escola.",
            "Recebi-se semanalmente e é armazenado na escola"
        ],
        "Não se aplica": ["Não se aplica.", "NAO SE APLICA"]
    },
    '2.27.1. Caso a resposta anterior seja "Não", quais equipamentos estão em falta? (Pode marcar mais de uma opção)': {
        "Estantes para livros / Armários de armazenamento para material pedagógico":
            ["Estantes para livros"],
        "Produtos tecnológicos (como lousa digital ou projetor)":
            ["produtos tecnológicos como lousa inteligente"],
        "Não se aplica": ["não se aplica", "Não se aplica"]
    },
    '3.2. Caso a resposta anterior seja "Sim", quais as medidas adotadas pela Escola para combater o problema?': {
        "Busca ativa escolar": ["Busca ativa", "A escola realiza a Busca Ativa.", "Busca Ativa",
                                "Busca ativa escolar."],
        "Contato com pais ou responsáveis": ["Entrar em contato com os pais ou responsáveis."],
        "Não se aplica": ["NÃO TEMOS EVASÃO", "NÃO SE APLICA", "NAO SE APLICA", "não se aplica", "NENHUMA"]
    },
    '5.5.1. Caso a resposta anterior seja "Sim", em que consiste a classificação? Caso a resposta anterior seja "Não", responder "Não se aplica".': {
        "Quantidade de alunos": [
            "Quantitativo de aluno",
            "quantidade alunos indica o porte e define a gratificação de acordo com a lei 561/2010 que versa sobre a carreira docente do município",
            "Na quantidade de alunos.", "QUANTIDADE DE MATRÍCULAS",
            "A classificação se dá por meio da quantidade de alunos."
        ],
        "Porte da escola (pequeno, médio, grande porte)": [
            "Porte da escola", "PORTE DA ESCOLAR",
            "A concessão de gratificação pelo exercício de funções de diretor se dar devido ao porte da escola classificando em suporte A, B e C, de acordo com o plano de carreira, cargos e remuneração dos profissionais da Educação pública municipal. Sendo assim, esta escola encontra-se na posição de suporte B",
            "porte IV", "PELO PORTE DA ESCOLA. SOMOS ESCOLA DE MEDIO PORTE"
        ],
        "Não se aplica": ["NÃO SE APLICA", "Não se Aplica", "Não se aplica.", "NAO SE APLICA"]
    },
    '6.3.1. Caso a resposta anterior seja "Sim", quais atividades são desenvolvidas? Caso a resposta anterior seja "Não", responder "Não se aplica".': {
        "Feiras culturais": ["Agosto Cultural. Dia da Consciência Negra, com exposição e apresentações."],
        "Não se aplica": ["Não se aplica."]
    }
}

EIXOS_FRAGMENTACAO = {
    "Identificacao_Escola": (0, 16),
    "Estrutura_Fisica_Funcionamento": (17, 64),
    "Alunos": (65, 85),
    "Professores": (86, 90),
    "Gestao_Equipe": (91, 98),
    "Pais_Comunidade": (99, 104),
    "Questoes_Pedagogicas": (105, 108),
    "Gestao_Democratica": (109, 116),
    "Documentos": (117, 119),
    "Seguranca_Escola": (120, 122),
    "Violencia_Indisciplina": (123, 125),
    "Prestacao_Contas": (126, 135),
    "Experiencia_Inovadora": (136, 137),
    "Objetivo_Gestao": (138, 140),
}


def carregar_dados(src_path: str) -> pd.DataFrame:
    """Carrega dados de diferentes formatos de arquivo."""
    extensao = src_path.split(".")[-1].lower()

    if extensao in ["csv", "zip"]:
        csv_local, _ = ensure_csv_local(src_path)
        return pd.read_csv(csv_local, dtype=str)
    elif extensao == "xlsx":
        return pd.read_excel(src_path, dtype=str)
    else:
        raise ValueError(f"Extensão '{extensao}' desconhecida.")


def aplicar_transformacoes(df: pd.DataFrame) -> pd.DataFrame:
    """Aplica todas as transformações configuradas."""
    # Transformações de case
    for tipo, colunas in TRANSFORMACOES.items():
        for coluna in colunas:
            df = transformar_coluna(df, coluna, tipo)

    # Limpezas
    for coluna, palavras in LIMPEZAS.items():
        df = limpar_coluna(df, coluna, palavras)

    # Padronizações
    for coluna, mapa in PADRONIZACOES.items():
        df = padronizar_respostas(df, coluna, mapa)

    return df


def etl_csv_gestao(src_path: str):
    """Pipeline principal de ETL para dados de gestão."""
    # Carregar e limpar
    df = carregar_dados(src_path)
    df = limpar_dataframe_completo(df)
    df = normalize_timestamp_column(df, src_col="Carimbo de data/hora", dst_col="Data do Envio")
    df = corrigir_nao_se_aplica(df)

    # Aplicar transformações
    df = aplicar_transformacoes(df)

    # Salvar
    dest_path = os.path.join("../data", "projeto_monitor.csv")
    save_csv(df, dest_path)
    print("CSV corrigido e salvo em:", dest_path)

    # Fragmentar
    fragmenta_csv_por_faixas(
        df, EIXOS_FRAGMENTACAO,
        salvar=True,
        prefixo_arquivo="eixo_",
        pasta_destino="../data/"
    )


def etl_csv_comunidade(path_file: str):
    """Pipeline de ETL para dados da comunidade."""
    df = pd.read_csv(path_file, header=None, encoding="utf-8")
    escolas = escolas_unicas(df)

    gerar_pagina_html_escolas_unicas(
        df, escolas,
        saida="../escolas_participantes_censo.html",
        abrir_no_navegador=False
    )

    colunas = ["data", "nome_escola", "estrutura_fisica", "acessibilidade",
               "equipamentos", "merenda_mobiliario", "professores", "seguranca",
               "material_didatico", "transporte", "violencia", "gestao"]

    df_com_colunas = adicionar_colunas(df, colunas)
    gerar_pagina_html_ranking(df_com_colunas, "../ranking.html")


if __name__ == '__main__':
    file_gestao = r"C:\Users\User\Downloads\Projeto Monitor Escolar.csv (19).zip"
    etl_csv_gestao(file_gestao)

    file_comunidade = r"C:\Users\User\Downloads\Projeto Monitor Escolar - Resposta da comunidade (5).csv"
    etl_csv_comunidade(file_comunidade)

    # Abrir no navegador (se necessário)
    webbrowser.open(Path("../index.html").resolve().as_uri())